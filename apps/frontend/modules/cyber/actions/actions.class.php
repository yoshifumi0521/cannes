<?php
// auto-generated by sfPropelCrud
// date: 2014/03/08 06:29:38
?>
<?php

/**
 * civer actions.
 *
 * @package    youngcannes
 * @subpackage civer
 * @author     Your name here
 * @version    SVN: $Id: actions.class.php 3335 2007-01-23 16:19:56Z fabien $
 */
class cyberActions extends sfActions
{
  public function executeList()
  {
    $this->cybers = CyberPeer::doSelect(new Criteria());

  }

  public function executeShow()
  {
    $this->cyber = CyberPeer::retrieveByPk($this->getRequestParameter('id'));
    // $this->forward404Unless($this->cyber);
  }

  public function executeCreate()
  {
    $this->cyber = new Cyber();

    $this->setTemplate('edit');
  }

  public function executeEdit()
  {
    $this->cyber = CyberPeer::retrieveByPk($this->getRequestParameter('id'));
    $this->forward404Unless($this->cyber);
  }

  public function executeUpdate()
  {
    if (!$this->getRequestParameter('id'))
    {
      $cyber = new Cyber();
    }
    else
    {
      $cyber = CyberPeer::retrieveByPk($this->getRequestParameter('id'));
      $this->forward404Unless($cyber);
    }

    $cyber->setId($this->getRequestParameter('id'));
    $cyber->setTitle($this->getRequestParameter('title'));
    $cyber->setClient($this->getRequestParameter('client'));
    $cyber->setAgency($this->getRequestParameter('agency'));
    $cyber->setPrize($this->getRequestParameter('prize'));
    $cyber->setUrl($this->getRequestParameter('url'));
    $cyber->setSummary($this->getRequestParameter('summary'));
    $cyber->setBody($this->getRequestParameter('body'));
    $cyber->setImpression($this->getRequestParameter('impression'));
    $cyber->setMemo($this->getRequestParameter('memo'));
    //displayを1にする。
    $cyber->setDisplay(1);
    //保存する。
    $cyber->save();

    //イメージ画像をいれる。
    $alphabet = str_split('abcde');
    $image_json = $cyber->getImage()?json_decode($cyber->getImage(),true): array();
    $yml_image_size = sfConfig::get('app_image_size');
    foreach ( $alphabet as $key1 => $value1)
    {
      $image_name = 'image_'.$cyber->getId().$value1;
      if($this->getRequest()->getFilePath('image_'.$value1))
      {
        foreach ($yml_image_size as $key2 => $value2)
        {
          $image = new sfThumbnail($value2['x'],$value2['y']);
          $image->loadFile($this->getRequest()->getFilePath('image_'.$value1));
          $image->save(sfConfig::get('sf_upload_dir').'/cyber/'.$key2.'/'.$image_name.'.jpg', 'image/jpeg');
        }
        $image_json['image_'.$value1] = $image_name;
      }
    }
    $cyber->setImage(json_encode($image_json));

    //SWFファイルを保存する。
    $swf_json = $cyber->getSwfFile()?json_decode($cyber->getSwfFile(),true): array();
    if($this->getRequest()->getFilePath('swf'))
    {
      $swf_name = 'swf_'.$cyber->getId()."a";
      $this->getRequest()->moveFile('swf', sfConfig::get('sf_upload_dir').'/cyber/swf/'.$swf_name.".swf");
      $swf_json["swf"] = $swf_name;
    }
    $cyber->setSwfFile(json_encode($swf_json));
    $cyber->save();


    return $this->redirect('cyber/show?id='.$cyber->getId());
  }

  //updateがエラーのとき
  public function handleErrorUpdate()
  {
    // if (!$this->getRequestParameter('id'))
    // {
    //   $civer = new Civer();
    // }
    // else
    // {
    //   $civer = CiverPeer::retrieveByPk($this->getRequestParameter('id'));
    //   $this->forward404Unless($civer);
    // }
    // $civer = new Civer();
    // // $civer->setId($this->getRequestParameter('id'));
    // $civer->setTitle($this->getRequestParameter('title'));
    // $civer->setClient($this->getRequestParameter('client'));
    // $civer->setAgency($this->getRequestParameter('agency'));
    // $civer->setUrl($this->getRequestParameter('url'));
    // $civer->setSummary($this->getRequestParameter('summary'));
    // $civer->setBody($this->getRequestParameter('body'));
    // $civer->setImpression($this->getRequestParameter('impression'));
    // $civer->setMemo($this->getRequestParameter('memo'));


    // $this->setTemplate('edit');
    // return sfView::SUCCESS;
  }

  public function executeDelete()
  {
    $cyber = CyberPeer::retrieveByPk($this->getRequestParameter('id'));

    $this->forward404Unless($cyber);

    $cyber->delete();

    return $this->redirect('@cyber_list');
  }
}
